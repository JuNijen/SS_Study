{"ast":null,"code":"var _jsxFileName = \"D:\\\\JSE\\\\SIEUN\\\\React\\\\demo-project\\\\todo-list\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.id = 1;\n    this.state = {\n      input: '',\n      todos: [{\n        id: 0,\n        text: '할 일을 입력하세요.',\n        checked: false\n      } // {     id: 1,     text: ' 리액트 소개',     checked: true }\n      ]\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        // input 의 다음 바뀔 값\n        input: e.target.value\n      });\n    };\n\n    this.handleCreate = () => {\n      const {\n        input,\n        todos\n      } = this.state;\n      this.setState({\n        // input을 비우고, concat을 이용해서 배열에 추가한다.\n        input: '',\n        todos: todos.concat({\n          id: this.id++,\n          text: input,\n          checked: false\n        })\n      });\n    };\n\n    this.handleKeyPress = e => {\n      if (e.key === 'Enter') {\n        this.handleCreate();\n        this.getTodayDate();\n      }\n    };\n\n    this.handleToggle = id => {\n      const {\n        todos\n      } = this.state; // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n\n      const index = todos.findIndex(todo => todo.id === id);\n      const selected = todos[index]; // 선택한 객체\n\n      const nextTodos = [...todos]; // 배열을 복사\n      // 기존의 값들을 복사하고, checked 값을 덮어쓰기\n\n      nextTodos[index] = { ...selected,\n        checked: !selected.checked\n      };\n      this.setState({\n        todos: nextTodos\n      });\n    };\n\n    this.handleRemove = id => {\n      const {\n        todos\n      } = this.state;\n      this.setState({\n        todos: todos.filter(todo => todo.id !== id)\n      });\n    };\n\n    this.getTodayDate = () => {\n      const {\n        date\n      } = this.state;\n      var todayDate = new Date(),\n          result = todayDate.getFullYear() + '-' + todayDate.getMonth() + 1 + todayDate.getDate();\n      console.log(date, result, todayDate.getDate());\n      this.setState({\n        date: result\n      });\n    };\n  }\n\n  render() {\n    const {\n      date,\n      input,\n      todos\n    } = this.state;\n    const {\n      handleChange,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      getTodayDate\n    } = this;\n    return /*#__PURE__*/_jsxDEV(TodoListTemplate, {\n      date: getTodayDate,\n      form: /*#__PURE__*/_jsxDEV(Form, {\n        value: input,\n        onKeyPress: handleKeyPress,\n        onChange: handleChange,\n        onCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(TodoItemList, {\n        todos: todos,\n        onToggle: handleToggle,\n        onRemove: handleRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","TodoListTemplate","Form","TodoItemList","App","id","state","input","todos","text","checked","handleChange","e","setState","target","value","handleCreate","concat","handleKeyPress","key","getTodayDate","handleToggle","index","findIndex","todo","selected","nextTodos","handleRemove","filter","date","todayDate","Date","result","getFullYear","getMonth","getDate","console","log","render"],"sources":["D:/JSE/SIEUN/React/demo-project/todo-list/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport Form from './components/Form';\nimport TodoItemList from './components/TodoItemList';\n\nclass App extends Component {\n\n    id = 1\n\n    state = {\n        input: '',\n        todos: [\n            {\n                id: 0,\n                text: '할 일을 입력하세요.',\n                checked: false\n            },\n            // {     id: 1,     text: ' 리액트 소개',     checked: true }\n        ]\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            // input 의 다음 바뀔 값\n            input: e.target.value\n        });\n    }\n\n    handleCreate = () => {\n        const {input, todos} = this.state;\n        this.setState({\n            // input을 비우고, concat을 이용해서 배열에 추가한다.\n            input: '',\n            todos: todos.concat({\n                id: this.id++,\n                text: input,\n                checked: false\n            })\n        });\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            this.handleCreate();\n            this.getTodayDate();\n        }\n    }\n\n    handleToggle = (id) => {\n        const {todos} = this.state;\n\n        // 파라미터로 받은 id 를 가지고 몇번째 아이템인지 찾습니다.\n        const index = todos.findIndex(todo => todo.id === id);\n        const selected = todos[index]; // 선택한 객체\n        const nextTodos = [...todos];  // 배열을 복사\n\n        // 기존의 값들을 복사하고, checked 값을 덮어쓰기\n        nextTodos[index] = {\n            ...selected,\n            checked: !selected.checked\n        };\n\n        this.setState({todos: nextTodos});\n    }\n\n    handleRemove = (id) => {\n        const {todos} = this.state;\n        this.setState({\n            todos: todos.filter(todo => todo.id !== id)\n        });\n    }\n\n    getTodayDate = () => {\n      const {date} = this.state;\n        var todayDate = new Date(),\n            result = todayDate.getFullYear() + '-' + todayDate.getMonth() + 1 +\n                    todayDate.getDate();\n        console.log(date, result, todayDate.getDate());\n\n\n        this.setState({\n            date: result\n        });\n    }\n\n    render() {\n        const {date, input, todos} = this.state;\n        const {\n            handleChange,\n            handleCreate,\n            handleKeyPress,\n            handleToggle,\n            handleRemove,\n            getTodayDate\n        } = this;\n\n        return (\n            <TodoListTemplate\n                date={getTodayDate}\n                form={(\n                    <Form\n                        value={input}\n                        onKeyPress={handleKeyPress}\n                        onChange={handleChange}\n                        onCreate={handleCreate}/>\n                )}>\n                <TodoItemList todos={todos} onToggle={handleToggle} onRemove={handleRemove}/>\n            </TodoListTemplate>\n        );\n    }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}